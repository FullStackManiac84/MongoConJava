/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MongoConJava;

import java.lang.reflect.*;
import java.net.UnknownHostException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import org.bson.types.ObjectId;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.util.JSON;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
    public static MongoClient mongoClient;
	public static DB database;
	public static DBCollection test;
	public static void stain(Object nameOfPlayer1, Object nameOfPlayer2, Map<String, Object> chessBoard) throws UnknownHostException {
		mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
		database = mongoClient.getDB("MongoDBTutorial");
		test = database.getCollection("test");
		
		// Step 1 : Query mongo for players and board (using Pat and Frank for now)
		DBObject query = new BasicDBObject("player1", nameOfPlayer1).append("player2", nameOfPlayer2);
		DBCursor cursor = test.find(query);
		String objID = "";
		if(cursor.one() != null) {
			objID = cursor.one().get("_id").toString();
		}
		Gson gson = new Gson();
		
		Map<String, DBObject> objMap = new HashMap<String, DBObject>();
		Iterator<Map.Entry<String, Object>> it = chessBoard.entrySet().iterator();
		while(it.hasNext()) {
			Map.Entry<String, Object> local_it = it.next();
			BasicDBObject myObj = (BasicDBObject)JSON.parse(gson.toJson(local_it.getValue()));
			objMap.put(local_it.getKey(), myObj);
		}
		
		DBObject thingamajig = new BasicDBObject(objMap)
								.append("player1", nameOfPlayer1)
								.append("player2", nameOfPlayer2);
		
		if(!objID.isEmpty()) {
			thingamajig.put("_id", new ObjectId(objID));
		}
		test.save(thingamajig);
		System.out.println(cursor.one()); // this is null if not in db
		
		
	}
	
	public static DBObject convert(TestObj testObj) {
		return new BasicDBObject("XP", testObj.getXP()).append("Timer", testObj.getTimer())
				.append("memberID", testObj.getMemberId());
	}
	
	public static Map<String, ZywickSpecial> refrain(Object nameOfPlayer1, Object nameOfPlayer2) throws UnknownHostException {
		mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
		database = mongoClient.getDB("MongoDBTutorial");
		test = database.getCollection("test");
		
		DBObject query = new BasicDBObject("player1", nameOfPlayer1).append("player2", nameOfPlayer2);
		DBCursor cursor = test.find(query);
		
		Gson gson = new Gson();
		
		Map<String, ZywickSpecial> testBoard = new HashMap<>();
		Set<String> myKeys = cursor.one().keySet();
		Type pwzType = new TypeToken<ZywickSpecial>() {}.getType();
		String randomPieceJSON = "";
		for(String key : myKeys) {
			if(key.equals("_id") || key.equals("player1") || key.equals("player2")) {
				continue;
			}
			randomPieceJSON = cursor.one().get(key).toString();
			ZywickSpecial pwzSpec = gson.fromJson(randomPieceJSON, pwzType);
			testBoard.put(new String(key), new ZywickSpecial(pwzSpec));
		}
		
		return testBoard;
	}
}